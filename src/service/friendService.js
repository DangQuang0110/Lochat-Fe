// src/services/friendService.js
import apiService from '@/api/apiService'

export const getAcceptedFriends = async (accountId) => {
  try {
    const response = await apiService.get(`/api/v1/friendShips/${accountId}`)
    return response.data.data?.others ?? [] // ‚úÖ truy ƒë√∫ng v√†o `data.others`
  } catch (error) {
    console.error('L·ªói khi l·∫•y danh s√°ch b·∫°n b√®:', error)
    return []
  }
}

export const getReceivedFriendRequests = async (accountId) => {
  try {
    const res = await apiService.get(`/api/v1/friendShips/receive/${accountId}`)
    return res.data.data?.others ?? [] // ‚úÖ fix: truy c·∫≠p ƒë√∫ng v√†o data.others
  } catch (err) {
    console.error('L·ªói khi l·∫•y l·ªùi m·ªùi k·∫øt b·∫°n:', err)
    return []
  }
}


export const respondToFriendRequest = async ({ senderId, receiverId, status }) => {
  try {
    await apiService.put('/api/v1/friendShips/', { senderId, receiverId, status })
  } catch (err) {
    console.error('L·ªói khi ph·∫£n h·ªìi l·ªùi m·ªùi:', err)
    throw err
  }
}
export const getSentFriendRequests = async (accountId) => {
  try {
    const res = await apiService.get(`/api/v1/friendShips/send/${accountId}`)
    return res.data.data?.others ?? [] // l·∫•y danh s√°ch ƒë√£ g·ª≠i
  } catch (err) {
    console.error('L·ªói khi l·∫•y l·ªùi m·ªùi ƒë√£ g·ª≠i:', err)
    return []
  }
}
export const unfriend = async ({ senderId, receiverId }) => {
  try {
    await apiService.delete('/api/v1/friendShips/', {
      data: { senderId, receiverId } // üí° axios c·∫ßn `data` khi d√πng DELETE
    })
  } catch (err) {
    console.error('‚ùå L·ªói khi hu·ª∑ k·∫øt b·∫°n:', err)
    throw err
  }
}